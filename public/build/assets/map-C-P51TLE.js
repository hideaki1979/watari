let a,o=[],d="",u="100";async function m(){try{const{Map:e}=await google.maps.importLibrary("maps"),n=document.getElementById("map");if(!n){console.error("Map element not found");return}a=new e(n,{center:{lat:35.6895,lng:139.6917},zoom:13,mapId:"c1be8225dc3df8f"}),a.addListener("idle",()=>{c()})}catch(e){console.error("Error initializing map:",e)}}async function c(){const e=a.getCenter(),n=new URLSearchParams({query:d,distance:u,lat:e.lat(),lng:e.lng()});try{const t=await fetch(`api/locations?${n}`);if(!t.ok)throw new Error("住所取得処理でエラーが発生しました。");const r=await t.json();y(r)}catch(t){console.error("住所取得エラー：",t)}}async function l(e){d=e,await c()}async function p(e){u=e,await c()}async function y(e){f();try{const{AdvancedMarkerElement:n}=await google.maps.importLibrary("marker");for(const t of e){if(!t.latitude||!t.longitude)continue;const r=new n({position:{lat:parseFloat(t.latitude),lng:parseFloat(t.longitude)},map:a,title:t.item_name});r.addListener("click",()=>showDetails(t)),o.push(r)}}catch(n){console.error("Error adding marker:",n)}}function f(){o.forEach(e=>e.setMap(null)),o=[]}document.addEventListener("DOMContentLoaded",async()=>{const e=document.getElementById("search-bar"),n=document.getElementById("distance-select");await m();let t=(e==null?void 0:e.value)||"";n==null||n.addEventListener("change",()=>{p(n.value)}),e==null||e.addEventListener("keypress",async r=>{if(r.key==="Enter"){r.preventDefault();const i=e.value,s=new URL(window.location.href);s.searchParams.set("query",i),window.history.pushState({},"",s),await l(i)}}),t&&l(t)});
